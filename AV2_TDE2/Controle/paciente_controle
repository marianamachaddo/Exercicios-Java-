package controle;

import dominio.Paciente;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class PacienteControle {
    private final String arquivo;

    public PacienteControle(String arquivo) {
        this.arquivo = arquivo;
    }

    public List<Paciente> carregarPacientes() {
        List<Paciente> pacientes = new ArrayList<>();
        File file = new File(arquivo);

        if (!file.exists()) {
            return pacientes;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = reader.readLine()) != null) {
                pacientes.add(Paciente.fromString(line));
            }
        } catch (IOException e) {
            System.err.println("Erro ao carregar pacientes: " + e.getMessage());
        }

        return pacientes;
    }

    public void salvarPacientes(List<Paciente> pacientes) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(arquivo))) {
            for (Paciente paciente : pacientes) {
                writer.write(paciente.toString());
                writer.newLine();
            }
        } catch (IOException e) {
            System.err.println("Erro ao salvar pacientes: " + e.getMessage());
        }
    }

    public void incluirPaciente(Paciente paciente) {
        List<Paciente> pacientes = carregarPacientes();
        for (Paciente p : pacientes) {
            if (p.getNumero() == paciente.getNumero()) {
                System.out.println("Paciente já cadastrado!");
                return;
            }
        }
        pacientes.add(paciente);
        salvarPacientes(pacientes);
        System.out.println("Paciente incluído com sucesso!");
    }

    public void alterarPaciente(int numero, double peso, double altura) {
        List<Paciente> pacientes = carregarPacientes();
        for (Paciente paciente : pacientes) {
            if (paciente.getNumero() == numero) {
                paciente.setPeso(peso);
                paciente.setAltura(altura);
                salvarPacientes(pacientes);
                System.out.println("Paciente alterado com sucesso!");
                return;
            }
        }
        System.out.println("Paciente não encontrado!");
    }

    public void excluirPaciente(int numero) {
        List<Paciente> pacientes = carregarPacientes();
        pacientes.removeIf(paciente -> paciente.getNumero() == numero);
        salvarPacientes(pacientes);
        System.out.println("Paciente excluído com sucesso!");
    }

    public void listarPacientes() {
        List<Paciente> pacientes = carregarPacientes();
        if (pacientes.isEmpty()) {
            System.out.println("Nenhum paciente cadastrado.");
        } else {
            for (Paciente paciente : pacientes) {
                paciente.listarPaciente();
            }
        }
    }
}
